(()=>{"use strict";const e="https://forkify-api.herokuapp.com/api/v2/recipes",n=async function(e,n){try{const s=n?fetch(e,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(n)}):fetch(e),t=await Promise.race([s,(10,new Promise(((e,n)=>{setTimeout((()=>{n(new Error("Request failed. Timeout after 10 seconds"))}),1e4)})))]),i=await t.json();if(!t.ok)throw new Error(`${i.message} (${t.status})`);return i}catch(e){throw e}},s={recipe:{},search:{query:"",results:[],page:1,resultsPerPage:10}},t=function(e=s.search.page){s.search.page=e;const n=(e-1)*s.search.resultsPerPage,t=e*s.search.resultsPerPage;return s.search.results.slice(n,t)};class i{_data;render(e,n=!0){if(!e||Array.isArray(e)&&0===e.length)return this.renderError();this._data=e;const s=this._generateMarkup();if(!n)return s;this._mount(s)}update(e){this._data=e;const n=this._generateMarkup(),s=document.createRange().createContextualFragment(n),t=Array.from(s.querySelectorAll("*")),i=Array.from(this._parentElement.querySelectorAll("*"));t.forEach(((e,n)=>{const s=i[n];e.isEqualNode(s)||""===e.firstChild?.nodeValue.trim()||(s.textContent=e.textContent),e.isEqualNode(s)||Array.from(e.attributes).forEach((e=>s.setAttribute(e.name,e.value)))}))}renderSpinner(){this._mount('\n      <div class="spinner">\n        <svg>\n          <use href="./imgs/icons.ed10c2.svg#icon-loader"></use>\n        </svg>\n      </div>\n    ')}renderError(e=this._errMsg){const n=`\n      <div class="error">\n        <div>[ERROR]</div>\n        <p>${e}</p> \n      </div> \n    `;this._mount(n)}renderMessage(e=this._message){const n=`\n      <div class="message">\n        <div>\n          <svg>\n            <use href="./imgs/icons.ed10c2.svg#icon-smile"></use>\n          </svg>\n        </div>\n        <p>${e}</p>\n      </div>\n    `;this._mount(n)}_mount(e){this._clear(),this._parentElement.insertAdjacentHTML("afterbegin",e)}_clear(){this._parentElement.innerHTML=""}}const r=new class extends i{_parentElement="";_generateMarkup(){const e=window.location.hash.slice(1);return`\n      <li class="preview">\n        <a\n          class="preview__link ${this._data.id===e?"preview__link--active":""}"\n          href="#${this._data.id}"\n        >\n          <figure class="preview__fig">\n            <img src="${this._data.image}" alt="${this._data.title}" />\n          </figure>\n          <div class="preview__data">\n            <h4 class="preview__title">${this._data.title}</h4>\n            <p class="preview__publisher">${this._data.publisher}</p>\n            <div class="preview__user-generated ${this._data.key?"":"hidden"}">\n              <svg>\n                <use href="./imgs/icons.ed10c2.svg#icon-user"></use>\n              </svg>\n            </div>\n          </div>\n        </a>\n      </li>\n    `}},a=new class extends i{_parentElement=document.querySelector(".results");_errorMessage="找不到菜谱，换个词再试试吧 ;)";_message="";_generateMarkup(){return this._data.map((e=>r.render(e,!1))).join("")}},c=new class{_parentElment=document.querySelector(".search");_searchFieldEl=document.querySelector(".search").querySelector(".search__field");getInput(){const e=this._searchFieldEl.value;return this._clearInput(),e}_clearInput(){this._searchFieldEl.value=""}addEventHandler(e){this._parentElment.addEventListener("submit",(function(n){n.preventDefault(),e()}))}},o=new class extends i{_parentElement=document.querySelector(".pagination");addEventHandler(e){this._parentElement.addEventListener("click",(function(n){const s=n.target.closest(".btn--inline");if(!s)return;const t=+s.dataset.goto;e(t)}))}_generateMarkup(){const e=this._data.page,n=Math.ceil(this._data.results.length/this._data.resultsPerPage);return 1===e&&n>1?`\n        <button\n          data-goto="${e+1}"\n          class="btn--inline pagination__btn--next"\n        >\n          <span>Page ${e+1}</span>\n          <svg class="search__icon">\n            <use href="./imgs/icons.ed10c2.svg#icon-arrow-right"></use>\n          </svg>\n        </button>\n      `:e===n&&n>1?`\n        <button\n          data-goto="${e-1}"\n          class="btn--inline pagination__btn--prev"\n        >\n          <svg class="search__icon">\n            <use href="./imgs/icons.ed10c2.svg#icon-arrow-left"></use>\n          </svg>\n          <span>Page ${e-1}</span>\n        </button>\n      `:e<n?`\n        <button\n          data-goto="${e-1}"\n          class="btn--inline pagination__btn--prev"\n        >\n          <svg class="search__icon">\n            <use href="./imgs/icons.ed10c2.svg#icon-arrow-left"></use>\n          </svg>\n          <span>Page ${e-1}</span>\n        </button>\n        <button\n          data-goto="${e+1}"\n          class="btn--inline pagination__btn--next"\n        >\n          <span>Page ${e+1}</span>\n          <svg class="search__icon">\n            <use href="./imgs/icons.ed10c2.svg#icon-arrow-right"></use>\n          </svg>\n        </button>\n      `:""}},d=new class extends i{_parentElement=document.querySelector(".recipe");_errorMessage="找不到该菜谱，再试试吧！";_message="";addRenderHandler(e){["hashchange","load"].forEach((n=>window.addEventListener(n,e)))}addUpdateServingsHandler(e){this._parentElement.addEventListener("click",(function(n){const s=n.target.closest(".btn--update-servings");if(!s)return;const{updateTo:t}=s.dataset;+t>0&&e(+t)}))}_generateMarkup(){return`\n      <figure class="recipe__fig">\n        <img\n          src="${this._data.image}"\n          alt="${this._data.title}"\n          class="recipe__img" \n        />\n        <h1 class="recipe__title">\n          <span>${this._data.title}</span>\n        </h1>\n      </figure>\n\n      <div class="recipe__details">\n        <div class="recipe__info">\n          <svg class="recipe__info-icon">\n            <use href="./imgs/icons.ed10c2.svg#icon-clock"></use>\n          </svg>\n          <span class="recipe__info-data recipe__info-data--minutes">\n            ${this._data.cookingTime}\n          </span>\n          <span class="recipe__info-text">分钟</span>\n        </div>\n        <div class="recipe__info">\n          <svg class="recipe__info-icon">\n            <use href="./imgs/icons.ed10c2.svg#icon-users"></use>\n          </svg>\n          <span class="recipe__info-data recipe__info-data--people">\n            ${this._data.servings}\n          </span>\n          <span class="recipe__info-text">人餐</span>\n\n          <div class="recipe__info-buttons">\n            <button\n              class="btn--tiny btn--update-servings"\n              data-update-to="${this._data.servings-1}"\n            >\n              <svg>\n                <use href="./imgs/icons.ed10c2.svg#icon-minus-circle"></use>\n              </svg>\n            </button>\n            <button\n              class="btn--tiny btn--update-servings"\n              data-update-to="${this._data.servings+1}">\n              <svg>\n                <use href="./imgs/icons.ed10c2.svg#icon-plus-circle"></use>\n              </svg>\n            </button>\n          </div>\n        </div>\n\n        <div class="recipe__user-generated ${this._data.key?"":"hidden"}">\n          <svg>\n            <use href="./imgs/icons.ed10c2.svg#icon-user"></use>\n          </svg>\n        </div>\n        <button class="btn--round btn--bookmark">\n          <svg class="">\n            <use href="./imgs/icons.ed10c2.svg#icon-bookmark${this._data.bookmarked?"-fill":""}"></use>\n          </svg>\n        </button>\n      </div>\n\n      <div class="recipe__ingredients">\n        <h2 class="heading--2">配料</h2>\n        <ul class="recipe__ingredient-list">\n          ${this._data.ingredients.map(this._generateMarkupIngredient).join("")}\n      </div>\n\n      <div class="recipe__directions">\n        <h2 class="heading--2">制作指导</h2>\n        <p class="recipe__directions-text">\n          本菜谱由 <span class="recipe__publisher">${this._data.publisher}</span> 创建，点击按钮查看做菜指导\n        </p>\n        <a\n          class="btn--small recipe__btn"\n          href="${this._data.sourceUrl}"\n          target="_blank"\n        >\n          <span>指导</span>\n          <svg class="search__icon">\n            <use href="./imgs/icons.ed10c2.svg#icon-arrow-right"></use>\n          </svg>\n        </a>\n      </div>\n    `}_generateMarkupIngredient(e){return`\n    <li class="recipe__ingredient">\n      <svg class="recipe__icon">\n        <use href="./imgs/icons.ed10c2.svg#icon-check"></use>\n      </svg>\n      <div class="recipe__quantity">\n      ${e.quantity?e.quantity.toFixed(1):""}</div>\n      <div class="recipe__description">\n        <span class="recipe__unit">${e.unit}</span>\n        ${e.description}\n      </div>\n    </li>\n  `}};c.addEventHandler((async function(){a.renderSpinner();const i=c.getInput();if(i)try{await async function(t){s.search.query=t;try{const i=await n(`${e}?search=${t}`);s.search.results=i.data.recipes.map((e=>({id:e.id,title:e.title,publisher:e.publisher,image:e.image_url,...e.key&&{key:e.key}})))}catch(e){throw console.error(e),e}}(i),a.render(t()),o.render(s.search)}catch(e){console.log(e),a.renderError(e)}})),o.addEventHandler((function(e){a.render(t(e)),o.render(s.search)})),d.addRenderHandler((async function(){const i=window.location.hash.slice(1);if(i){d.renderSpinner();try{a.update(t()),await async function(t){try{const i=await n(`${e}/${t}`);s.recipe=function(e){const{recipe:n}=e.data;return{id:n.id,title:n.title,publisher:n.publisher,sourceUrl:n.source_url,image:n.image_url,servings:n.servings,cookingTime:n.cooking_time,ingredients:n.ingredients,...n.key&&{key:n.key}}}(i)}catch(e){throw console.error(e),e}}(i),d.render(s.recipe)}catch(e){d.renderError(),console.error(e)}}})),d.addUpdateServingsHandler((function(e){!function(e){s.recipe.ingredients.forEach((n=>{n.quantity=n.quantity*e/s.recipe.servings})),s.recipe.servings=e}(e),d.update(s.recipe)}))})();